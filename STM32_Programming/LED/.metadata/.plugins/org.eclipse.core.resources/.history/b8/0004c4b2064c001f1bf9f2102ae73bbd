/*
 * STM32407xx_driver.h
 *
 *  Created on: Jul 27, 2024
 *      Author: balaji
 */

#ifndef INC_STM32407XX_DRIVER_H_
#define INC_STM32407XX_DRIVER_H_


#include <stdint.h>
#define __vo volatile

/*
 * BASE ADDRESSES OF MEMORY UNITS IN STM32F4xx
 */
#define FLASH_BASEADDR			0x08000000U
#define SRAM1_BASEADDR			0x20000000U
#define SRAM2_BASEADDR			0x20010000U
#define SYSTEM_BASEADDR			0x1FFF0000U
#define SRAM_BASEADDR			SRAM1_BASEADDR

/*
 * BASE ADDRESSES OF BUS (AHBx and APBx)
 */
#define PERIPH_BASEADDR					0x04000000U
#define APB1PERIPH_BASEADDR				PERIPH_BASEADDR
#define APB2PERIPH_BASEADDR				0x40010000U
#define AHB1PERIPH_BASEADDR				0x40020000U
#define AHB2PERIPH_BASEADDR				0x50000000U

/*
 * BASE ADDRESSES OF PERIPHERALS HANGING ON AHB1 BUS
 */
#define GPIOA_BASEADDR		(AHB1PERIPH_BASEADDR + 0x0000)
#define GPIOB_BASEADDR		(AHB1PERIPH_BASEADDR + 0x0400)
#define GPIOC_BASEADDR		(AHB1PERIPH_BASEADDR + 0x0800)
#define GPIOD_BASEADDR		(AHB1PERIPH_BASEADDR + 0x0C00)
#define GPIOE_BASEADDR		(AHB1PERIPH_BASEADDR + 0x1000)
#define GPIOF_BASEADDR		(AHB1PERIPH_BASEADDR + 0x1400)
#define GPIOG_BASEADDR		(AHB1PERIPH_BASEADDR + 0x1800)
#define GPIOH_BASEADDR		(AHB1PERIPH_BASEADDR + 0x1C00)
#define GPIOI_BASEADDR		(AHB1PERIPH_BASEADDR + 0x2000)

#define RCC_BASEADDR		(AHB1PERIPH_BASEADDR + 0x3800)

/*
 * BASE ADDRESSES OF PERIPHERALS HANGING ON APB1 BUS
 */
#define I2C1_BASEADDR		(APB1PERIPH_BASEADDR + 0x5400)
#define I2C2_BASEADDR		(APB1PERIPH_BASEADDR + 0x5800)
#define I2C3_BASEADDR		(APB1PERIPH_BASEADDR + 0x5C00)

#define SPI2_BASEADDR		(APB1PERIPH_BASEADDR + 0x3800)
#define SPI3_BASEADDR		(APB1PERIPH_BASEADDR + 0x3C00)

#define USART2_BASEADDR		(APB1PERIPH_BASEADDR + 0x4400)
#define USART3_BASEADDR		(APB1PERIPH_BASEADDR + 0x4800)

#define UART4_BASEADDR		(APB1PERIPH_BASEADDR + 0x4C00)
#define UART5_BASEADDR		(APB1PERIPH_BASEADDR + 0x5000)

/*
 * BASE ADDRESSES OF PERIPHERALS HANGING ON APB2 BUS
 */

#define EXTI_BASEADDR		(APB2PERIPH_BASEADDR + 0x3C00)

#define SPI1_BASEADDR		(APB2PERIPH_BASEADDR + 0x3000)

#define SYSCFG_BASEADDR		(APB2PERIPH_BASEADDR + 0x3800)

#define USART1_BASEADDR		(APB2PERIPH_BASEADDR + 0x1000)
#define USART6_BASEADDR		(APB2PERIPH_BASEADDR + 0x1400)


/*
 * PERIPHERAL REGISTER DEFINITIONS
 */

typedef struct

{
	__vo uint32_t MODER;
	__vo uint32_t OTYPER;
	__vo uint32_t OSPEEDR;
	__vo uint32_t PUPDR;
	__vo uint32_t IDR;
	__vo uint32_t ODR;
	__vo uint32_t BSRR;
	__vo uint32_t LCKR;
	__vo uint32_t AFR[2];

}	GPIO_RegDef_t;

/*
 * PERIPHERAL REGISTER DEFINITIONS FOR RCC
 */

typedef struct

{
	__vo uint32_t CR;
	__vo uint32_t PLLCFGR;
	__vo uint32_t CFGR;
	__vo uint32_t CIR;
	__vo uint32_t AHB1RSTR;
	__vo uint32_t AHB2RSTR;
	__vo uint32_t AHB3RSTR;

		 uint32_t RESERVED0;

	__vo uint32_t APB1RSTR;
	__vo uint32_t APB2RSTR;

		 uint32_t RESERVED1[2];

	__vo uint32_t AHB1ENR;
	__vo uint32_t AHB2ENR;
	__vo uint32_t AHB3ENR;

		 uint32_t RESERVED2;

	__vo uint32_t APB1ENR;
	__vo uint32_t APB2ENR;

		 uint32_t RESERVED3[2];

	__vo uint32_t AHB1LPENR;
	__vo uint32_t AHB2LPENR;
	__vo uint32_t AHB3LPENR;

		 uint32_t RESERVED4;

	__vo uint32_t APB1LPENR;
	__vo uint32_t APB2LPENR;

		 uint32_t RESERVED5[2];

	__vo uint32_t BDCR;
	__vo uint32_t CSR;

		 uint32_t RESERVED6[2];

	__vo uint32_t SSCGR;
	__vo uint32_t PLLI2CFGR;
	__vo uint32_t PLLSAICFGR;
	__vo uint32_t DCKCFGR;
	__vo uint32_t CKGATENR;
	__vo uint32_t DCKCFGR2;

}	RCC_RegDef_t;


/*
 * PERIPHERAL DEFINITIONS POINTING TO THE BASE ADDRESS OF RESPECTIVE PERIPHERALS
 */

#define GPIOA		((GPIO_RegDef_t*)GPIOA_BASEADDR)
#define GPIOB		((GPIO_RegDef_t*)GPIOB_BASEADDR)
#define GPIOC		((GPIO_RegDef_t*)GPIOC_BASEADDR)
#define GPIOD		((GPIO_RegDef_t*)GPIOD_BASEADDR)
#define GPIOE		((GPIO_RegDef_t*)GPIOE_BASEADDR)
#define GPIOF		((GPIO_RegDef_t*)GPIOF_BASEADDR)
#define GPIOG		((GPIO_RegDef_t*)GPIOG_BASEADDR)
#define GPIOH		((GPIO_RegDef_t*)GPIOH_BASEADDR)
#define GPIOI		((GPIO_RegDef_t*)GPIOI_BASEADDR)

#define RCC			((RCC_RegDef_t*)RCC_BASEADDR)


/*
 * ENABLING RCC CLOCK
 */

#define GPIOA_PCLK_EN()		(RCC->AHB1ENR	|=	(1 << 0))
#define GPIOB_PCLK_EN()		(RCC->AHB1ENR	|=	(1 << 1))
#define GPIOC_PCLK_EN()		(RCC->AHB1ENR	|=	(1 << 2))
#define GPIOD_PCLK_EN()		(RCC->AHB1ENR	|=	(1 << 3))
#define GPIOE_PCLK_EN()		(RCC->AHB1ENR	|=	(1 << 4))
#define GPIOF_PCLK_EN()		(RCC->AHB1ENR	|=	(1 << 5))
#define GPIOG_PCLK_EN()		(RCC->AHB1ENR	|=	(1 << 6))
#define GPIOH_PCLK_EN()		(RCC->AHB1ENR	|=	(1 << 7))
#define GPIOI_PCLK_EN()		(RCC->AHB1ENR	|=	(1 << 8))


/*
 * DIS-ABLING RCC CLOCK
 */

#define GPIOA_PCLK_DI()		(RCC->AHB1ENR	&=	~(1 << 0))
#define GPIOB_PCLK_DI()		(RCC->AHB1ENR	&=	~(1 << 1))
#define GPIOC_PCLK_DI()		(RCC->AHB1ENR	&=	~(1 << 2))
#define GPIOD_PCLK_DI()		(RCC->AHB1ENR	&=	~(1 << 3))
#define GPIOE_PCLK_DI()		(RCC->AHB1ENR	&=	~(1 << 4))
#define GPIOF_PCLK_DI()		(RCC->AHB1ENR	&=	~(1 << 5))
#define GPIOG_PCLK_DI()		(RCC->AHB1ENR	&=	~(1 << 6))
#define GPIOH_PCLK_DI()		(RCC->AHB1ENR	&=	~(1 << 7))
#define GPIOI_PCLK_DI()		(RCC->AHB1ENR	&=	~(1 << 8))

/*
 * MACROS FOR RESETTING GPIOx
 */

#define GPIOA_RESET()	do{ (RCC->AHB1RSTR	|= (1 << 0)); (RCC-> AHB1RSTR &= ~(1 << 0));} while
#define GPIOB_RESET()	do{ (RCC->AHB1RSTR	|= (1 << 1)); (RCC-> AHB1RSTR &= ~(1 << 1));} while
#define GPIOC_RESET()	do{ (RCC->AHB1RSTR	|= (1 << 2)); (RCC-> AHB1RSTR &= ~(1 << 2));} while
#define GPIOD_RESET()	do{ (RCC->AHB1RSTR	|= (1 << 3)); (RCC-> AHB1RSTR &= ~(1 << 3));} while
#define GPIOE_RESET()	do{ (RCC->AHB1RSTR	|= (1 << 4)); (RCC-> AHB1RSTR &= ~(1 << 4));} while
#define GPIOF_RESET()	do{ (RCC->AHB1RSTR	|= (1 << 5)); (RCC-> AHB1RSTR &= ~(1 << 5));} while
#define GPIOG_RESET()	do{ (RCC->AHB1RSTR	|= (1 << 6)); (RCC-> AHB1RSTR &= ~(1 << 6));} while
#define GPIOH_RESET()	do{ (RCC->AHB1RSTR	|= (1 << 7)); (RCC-> AHB1RSTR &= ~(1 << 7));} while
#define GPIOI_RESET()	do{ (RCC->AHB1RSTR	|= (1 << 8)); (RCC-> AHB1RSTR &= ~(1 << 8));} while

/*
 * SOME GENERIC MACROS
 */

#define ENABLE		1
#define DISABLE 	0
#define SET			ENABLE
#define RESET		DISABLE


#endif /* INC_STM32407XX_DRIVER_H_ */
